h1. Compass

Compass Explorer
<img src="http://afrolegs.com/compass.png" alt="Compass" />

h2. What is Compass?

Compass is a clustering mechanism which respects the connection
between independent variables in examples/instances.

Compass accepts n data points and uses an O(n) fastmap routine to find
the two most separated points in the current selection.  With a
distance metric, the remaining points are shifted to one pole or
another and the algorithm recurses on itself until a stopping point is
reached.  Compass stops when a minimum leaf size is reached, which is
generally the sqrt(n).

A Compass tree is then pruned back by removing areas of greater
variance.

h2. Getting started

h3. Lisp

The lisp environment is loaded from the compass/trunk/src/
directory. Every file you need to run Compass experiments is located
in that library make file.

To start, fire up emacs and M-x slime while inside src/. To load the
library files, run:

(load "compass")

From there, you can access any of the support functions and datasets.

Other operations:

Calling a table: (albrecht)

Returning the instances from a table: (table-egs (albrecht))

Normalizing: (normalize (table-egs (albrecht)))

Shuffling data from a table: (shuffle (table-egs (albrecht)))

Creating K-means clusters: (meat-processor 8 (k-means 8 (table-egs (nasa93))))

Generating a compass tree: (compass (table-egs (cocomo81)) :distance-func 'euclidean-distance)

Generating a compass tree on data with a discrete class value:
(compass (table-egs (sonar)) :distance-func 'euclidean-distance :variance-func 'entropy)

Outputting a dot file for Graphviz of a Compass tree:
(dot-compass (compass (table-egs (cocomo81)) :distance-func 'euclidean-distance) "cocomo81.dot")



h3. Python

h4. Prerequisites

Compass python implementation requires the following libraries:

networkx
numpy
pydot
scipy

and for the graphical explorer:

wxpython

h4. How to run?

compass.py relies on your environment being setup correctly.

To generate visualizations like the one above for the telecom1
dataset, simply enter compass/trunk/src/python/ and run something like
the following:

./compass.py --arff arff/telecom1.arff --pydot --nx

This command will generate a networkx graph as well as a graphviz dot,
both in png format.
