(defun variance (these)
  (if (= (length these) 1)
      0
      (let* ((classes (mapcar #'first (mapcar #'last these)))
	     (n (make-normal-from-list classes)))
	(stdev n))))

(defun weighted-variance (c-node)
  (if (and (null (node-right c-node)) (null (node-left c-node)))
      (node-variance c-node)
      (if (or (null (node-right c-node)) (null (node-left c-node)))
	  (if (null (node-right c-node))
	      (node-variance (node-left c-node))
	      (node-variance (node-right c-node)))
	  (/ (+ (* (node-variance (node-right c-node))
		   (length (node-contents (node-right c-node))))
		(* (node-variance (node-left c-node))
		   (length (node-contents (node-left c-node)))))
	     (+ (length (node-contents (node-right c-node)))
		(length (node-contents (node-left c-node))))))))
